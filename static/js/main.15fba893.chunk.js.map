{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinTickers","coinId","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","width","height","type","series","item","x","time_open","y","open","toFixed","high","low","close","volume","options","chart","title","text","align","xaxis","yaxis","tooltip","enabled","priceani","keyframes","Tags","containerColor","textColor","TagContent","isMinus","plusColor","minusColor","Price","quotes","USD","percent_change_1h","toString","percent_change_12h","percent_change_24h","volume_24h_change_24h","percent_change_7d","percent_change_1y","ath_price","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Home","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","rank","open_source","description","total_supply","max_supply","path","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"sNAAMA,EAAQ,iCACP,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAAcA,EAASC,UASzD,SAASC,EAAiBC,GAC/B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,oBAAwBO,IAAUJ,MAAK,SAACC,GAAD,OACjDA,EAASC,U,yBCPPG,EAAYC,IAAOC,IAAV,kDAITC,EAASF,IAAOG,OAAV,mHAONC,EAAYJ,IAAOK,GAAV,0BAETC,EAAON,IAAOO,GAAV,+RAEC,SAACC,GAAD,OAAWA,EAAMC,MAAMC,WAWnB,SAACF,GAAD,OAAWA,EAAMC,MAAME,eAKhCC,EAAQZ,IAAOa,GAAV,+DAEA,SAACL,GAAD,OAAWA,EAAMC,MAAME,eAa5BG,EAASd,IAAOe,KAAV,sEAKNC,EAAMhB,IAAOiB,IAAV,oFAuCMC,I,EAAAA,EAjCf,WAGE,MAA4BC,mBAA0B,WAAY3B,GAA1D4B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACnB,OACE,eAACtB,EAAD,WACE,cAACuB,EAAA,EAAD,UACE,mDAEF,cAACpB,EAAD,UACE,cAACU,EAAD,6BAEDQ,EACC,cAACN,EAAD,yBAEA,cAACV,EAAD,iBACGiB,QADH,IACGA,OADH,EACGA,EAAME,MAAM,EAAG,KAAKC,KAAI,SAACC,GAAD,OACvB,cAACnB,EAAD,UACE,eAAC,IAAD,CACEoB,GAAI,CAAEC,SAAS,IAAD,OAAMF,EAAKG,IAAMC,MAAO,CAAEC,KAAML,EAAKK,OADrD,UAGE,cAACd,EAAD,CACEe,IAAG,qDAAgDN,EAAKO,OAAOC,iBAEhER,EAAKK,KANR,cADSL,EAAKG,a,iBC3EtB7B,EAAYC,IAAOC,IAAV,iIA+EAiC,I,UAAAA,EA1Df,YAAwC,IAAvBpC,EAAsB,EAAtBA,OACf,EAA4BqB,mBAC1B,CAAC,OAAQrB,IACT,kBFZG,SAA0BA,GAC/B,IAAMqC,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAO1C,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,mCAC4C0C,EAD5C,gBAC6DL,IACvEzC,MAAK,SAACC,GAAD,OAAcA,EAASC,UEOtB6C,CAAiB3C,KACvB,CAAE4C,gBAAiB,MAHbtB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAkBnB,OACE,cAAC,EAAD,UACGD,EACC,mBAEA,cAAC,IAAD,CACEuB,MAAO,IACPC,OAAQ,IACRC,KAAK,cACLC,OAAQ,CACN,CACEzB,KAxBA,OACVA,QADU,IACVA,OADU,EACVA,EAAMG,KAAI,SAACuB,GAUT,MAAO,CAAEC,EATDD,EAAKE,UAAU1B,MAAM,EAAG,IASjB2B,EARP,CACNH,EAAKI,KAAKC,QAAQ,GAClBL,EAAKM,KAAKD,QAAQ,GAClBL,EAAKO,IAAIF,QAAQ,GACjBL,EAAKQ,MAAMH,QAAQ,GACnBL,EAAKS,OAAOJ,QAAQ,UAmBlBK,QAAS,CACPC,MAAO,CACLb,KAAM,cACNF,MAAO,IACPC,OAAQ,KAEVe,MAAO,CACLC,KAAK,GAAD,OAAK9D,EAAL,UACJ+D,MAAO,QAETC,MAAO,CACLjB,KAAM,YAERkB,MAAO,CACLC,QAAS,CACPC,SAAS,UCtEnBlE,EAAYC,IAAOC,IAAV,gEAKTiE,EAAWC,YAAH,6HAURC,EAAOpE,IAAOC,IAAV,uTAKY,SAACO,GAAD,OAAWA,EAAMC,MAAM4D,kBAClC,SAAC7D,GAAD,OAAWA,EAAMC,MAAM6D,YAGnBJ,GAOTK,EAAavE,IAAOe,KAAV,oFAGL,SAACP,GAAD,OACPA,EAAMgE,QAAUhE,EAAMC,MAAMgE,UAAYjE,EAAMC,MAAMiE,cAGlD9D,EAAQZ,IAAOa,GAAV,uFA0HI8D,I,uBAAAA,GA9Ef,YAAmC,IAAlB7E,EAAiB,EAAjBA,OACf,EAA4BqB,mBAC1B,CAAC,QAASrB,IACV,kBAAMD,EAAiBC,KACvB,CACE4C,gBAAiB,MAJbtB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAOnB,OACE,cAAC,EAAD,UACGD,EACC,mBAEA,qCACE,eAACgD,EAAD,WACE,cAAC,EAAD,uCACA,cAACG,EAAD,CACEC,QAEE,OADI,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAIC,kBAAkBC,WAAWxD,MAAM,EAAG,IAF3D,4BAKOF,QALP,IAKOA,OALP,EAKOA,EAAMuD,OAAOC,IAAIC,kBALxB,UAOF,eAACV,EAAD,WACE,cAAC,EAAD,wCACA,cAACG,EAAD,CACEC,QAEE,OADI,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAIG,mBAAmBD,WAAWxD,MAAM,EAAG,IAF5D,4BAKOF,QALP,IAKOA,OALP,EAKOA,EAAMuD,OAAOC,IAAIG,mBALxB,UAOF,eAACZ,EAAD,WACE,cAAC,EAAD,uCACA,cAACG,EAAD,CACEC,QAEE,OADI,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAII,mBAAmBF,WAAWxD,MAAM,EAAG,IAF5D,4BAKOF,QALP,IAKOA,OALP,EAKOA,EAAMuD,OAAOC,IAAII,mBALxB,UAOF,eAACb,EAAD,WACE,cAAC,EAAD,4CACA,cAACG,EAAD,CACEC,QAGqB,OAFf,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAIK,sBACdH,WACAxD,MAAM,EAAG,IAJhB,4BAMOF,QANP,IAMOA,OANP,EAMOA,EAAMuD,OAAOC,IAAIK,sBANxB,UAQF,eAACd,EAAD,WACE,cAAC,EAAD,qCACA,cAACG,EAAD,CACEC,QAEE,OADI,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAIM,kBAAkBJ,WAAWxD,MAAM,EAAG,IAF3D,4BAKOF,QALP,IAKOA,OALP,EAKOA,EAAMuD,OAAOC,IAAIM,kBALxB,UAOF,eAACf,EAAD,WACE,cAAC,EAAD,mCACA,cAACG,EAAD,CACEC,QAA2D,OAA9C,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAIO,kBAAkBL,YAD9C,4BAEO1D,QAFP,IAEOA,OAFP,EAEOA,EAAMuD,OAAOC,IAAIO,kBAFxB,UAIF,eAAChB,EAAD,WACE,cAAC,EAAD,yCACA,cAACG,EAAD,CACEC,QAAmD,OAAtC,OAAJnD,QAAI,IAAJA,OAAA,EAAAA,EAAMuD,OAAOC,IAAIQ,UAAUN,YADtC,4BAEO1D,QAFP,IAEOA,OAFP,EAEOA,EAAMuD,OAAOC,IAAIQ,UAFxB,gBC3INtF,GAAYC,IAAOC,IAAV,uEAKTC,GAASF,IAAOG,OAAV,0HAONS,GAAQZ,IAAOa,GAAV,oFAGA,SAACL,GAAD,OAAWA,EAAMC,MAAME,eAG5BG,GAASd,IAAOe,KAAV,sEAKNuE,GAAWtF,IAAOC,IAAV,yKAQRsF,GAAevF,IAAOC,IAAV,mOAWZuF,GAAcxF,IAAOyF,EAAV,iDAIXC,GAAO1F,IAAOC,IAAV,6HAOJ0F,GAAM3F,IAAOe,KAAV,8OAOE,SAACP,GAAD,OACPA,EAAMoF,SAAWpF,EAAMC,MAAME,YAAcH,EAAMC,MAAM6D,aAMrDuB,GAAO7F,IAAOC,IAAV,wRAEC,SAACO,GAAD,OAAWA,EAAMC,MAAMC,WACZ,SAACF,GAAD,OAAWA,EAAMC,MAAM6D,aAIhC,SAAC9D,GAAD,OAAWA,EAAMC,MAAME,eAyJrBL,OAlFf,WACE,IAAQR,EAAWgG,cAAXhG,OACA+B,EAAUkE,cAAVlE,MACFmE,EAAaC,YAAc,kBAC3BC,EAAaD,YAAc,kBACjC,EAAmD9E,mBACjD,CAAC,OAAQrB,IACT,kBJlKG,SAAuBA,GAC5B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,IAAUJ,MAAK,SAACC,GAAD,OAC/CA,EAASC,UIgKHuG,CAAcrG,MAFHsG,EAAnB,EAAQhF,UAA8BiF,EAAtC,EAAgChF,KAIhC,EAAyDF,mBACvD,CAAC,UAAWrB,IACZ,kBAAMD,EAAiBC,MAFNwG,EAAnB,EAAQlF,UAAiCmF,EAAzC,EAAmClF,KAK7BmF,EAAUJ,GAAeE,EAC/B,OACE,eAAC,GAAD,WACE,cAAChF,EAAA,EAAD,UACE,cAAC,GAAD,WACQ,OAALO,QAAK,IAALA,OAAA,EAAAA,EAAOC,MAAOD,EAAMC,KAAO0E,EAAU,aAAH,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUvE,SAGnE,eAAC,GAAD,WACE,cAAC+D,GAAD,UACE,cAAC,IAAD,CAAMnE,GAAG,IAAT,uBAEF,cAAC,GAAD,WACQ,OAALG,QAAK,IAALA,OAAA,EAAAA,EAAOC,MAAOD,EAAMC,KAAO0E,EAAU,aAAH,OAAkBH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUvE,UAGlE0E,EACC,cAAC,GAAD,yBAEA,qCACE,eAAClB,GAAD,WACE,eAACC,GAAD,WACE,yCACA,sCAAOc,QAAP,IAAOA,OAAP,EAAOA,EAAUI,UAEnB,eAAClB,GAAD,WACE,2CACA,4CAAQc,QAAR,IAAQA,OAAR,EAAQA,EAAUrE,aAEpB,eAACuD,GAAD,WACE,gDACA,gCAAe,OAARc,QAAQ,IAARA,OAAA,EAAAA,EAAUK,aAAc,MAAQ,aAG3C,cAAClB,GAAD,iBAAca,QAAd,IAAcA,OAAd,EAAcA,EAAUM,cACxB,eAACrB,GAAD,WACE,eAACC,GAAD,WACE,gDACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAaK,kBAEtB,eAACrB,GAAD,WACE,+CACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAaM,mBAIxB,eAACnB,GAAD,WACE,cAACC,GAAD,CAAKC,SAAyB,OAAfM,EAAf,SACE,cAAC,IAAD,CAAMxE,GAAE,WAAM5B,EAAN,UAAR,qBAEF,cAAC6F,GAAD,CAAKC,SAAyB,OAAfI,EAAf,SACE,cAAC,IAAD,CAAMtE,GAAE,WAAM5B,EAAN,UAAR,wBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgH,KAAI,iBAAX,SACE,cAAC,GAAD,CAAOhH,OAAQA,MAEjB,cAAC,IAAD,CAAOgH,KAAI,iBAAX,SACE,cAAC,EAAD,CAAOhH,OAAQA,gBCvNdiH,I,GAAAA,GAff,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOD,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,Y,SCPJE,GAAcC,YAAH,2iDAkCI,SAACzG,GAAD,OAAWA,EAAMC,MAAMC,WAClC,SAACF,GAAD,OAAWA,EAAMC,MAAM6D,aAuBZ,SAAC9D,GAAD,OAAWA,EAAMC,MAAMC,WAClC,SAACF,GAAD,OAAWA,EAAMC,MAAM6D,aAkBlB4C,OAVf,WACE,OACE,qCACE,cAACF,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,QCrEnCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,IAAD,CAAe3G,MCXc,CACjCC,QAAS,UACT4D,UAAW,QACX3D,YAAa,UACb+D,WAAY,MACZD,UAAW,OACXJ,eAAgB,WDKZ,SACE,cAAC,GAAD,UAINqD,SAASC,eAAe,W","file":"static/js/main.15fba893.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\r\n  return fetch(\r\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: white;\r\n  color: ${(props) => props.theme.bgColor};\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 25px;\r\n  height: 25px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nfunction Coins() {\r\n  //useQuery : 첫번째 인자로 QueryKey, 두번째 인자로 fetcher function\r\n  //useQuery는 response를 캐싱하는 역할을 함.\r\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Coin Tracker</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>Coin Tracker</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{ pathname: `/${coin.id}`, state: { name: coin.name } }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coins;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 100px;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\ninterface Historical {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<Historical[]>(\r\n    [\"ohlc\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    { refetchInterval: 10000 }\r\n  );\r\n  const arr = () =>\r\n    data?.map((item) => {\r\n      let x = item.time_open.slice(5, 10);\r\n      let y = [\r\n        item.open.toFixed(2),\r\n        item.high.toFixed(2),\r\n        item.low.toFixed(2),\r\n        item.close.toFixed(2),\r\n        item.volume.toFixed(2),\r\n      ];\r\n\r\n      return { x: x, y: y };\r\n    });\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          width={500}\r\n          height={300}\r\n          type=\"candlestick\"\r\n          series={[\r\n            {\r\n              data: arr(),\r\n            },\r\n          ]}\r\n          options={{\r\n            chart: {\r\n              type: \"candlestick\",\r\n              width: 1000,\r\n              height: 500,\r\n            },\r\n            title: {\r\n              text: `${coinId} Chart`,\r\n              align: \"left\",\r\n            },\r\n            xaxis: {\r\n              type: \"datetime\",\r\n            },\r\n            yaxis: {\r\n              tooltip: {\r\n                enabled: true,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useQuery } from \"react-query\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { fetchCoinTickers } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n  width: 100%;\r\n`;\r\n\r\nconst priceani = keyframes`\r\n    0%{\r\n      opacity:0;\r\n    }50%{\r\n      opacity:0.5;\r\n    }100%{\r\n      opacity:1;\r\n    }\r\n  `;\r\n\r\nconst Tags = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  background-color: ${(props) => props.theme.containerColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  padding: 10px 15px;\r\n  margin-top: 15px;\r\n  animation: ${priceani} 1s ease-in-out;\r\n  border-radius: 10px;\r\n  &:first-child {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst TagContent = styled.span<{ isMinus: boolean }>`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) =>\r\n    props.isMinus ? props.theme.plusColor : props.theme.minusColor};\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 15px;\r\n  font-weight: 1000;\r\n  color: black;\r\n`;\r\n\r\ninterface Icoin {\r\n  coinId: string;\r\n}\r\n\r\ninterface ITickersInfo {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Price({ coinId }: Icoin) {\r\n  const { isLoading, data } = useQuery<ITickersInfo>(\r\n    [\"price\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n  return (\r\n    <Container>\r\n      {isLoading ? (\r\n        \"Loading Price...\"\r\n      ) : (\r\n        <>\r\n          <Tags>\r\n            <Title>Percent Change 1 hours: </Title>\r\n            <TagContent\r\n              isMinus={\r\n                data?.quotes.USD.percent_change_1h.toString().slice(0, 1) !==\r\n                \"-\"\r\n              }\r\n            >{`$ ${data?.quotes.USD.percent_change_1h}%`}</TagContent>\r\n          </Tags>\r\n          <Tags>\r\n            <Title>Percent Change 12 hours: </Title>\r\n            <TagContent\r\n              isMinus={\r\n                data?.quotes.USD.percent_change_12h.toString().slice(0, 1) !==\r\n                \"-\"\r\n              }\r\n            >{`$ ${data?.quotes.USD.percent_change_12h}%`}</TagContent>\r\n          </Tags>\r\n          <Tags>\r\n            <Title>Percent Change 24 hours:</Title>\r\n            <TagContent\r\n              isMinus={\r\n                data?.quotes.USD.percent_change_24h.toString().slice(0, 1) !==\r\n                \"-\"\r\n              }\r\n            >{`$ ${data?.quotes.USD.percent_change_24h}%`}</TagContent>\r\n          </Tags>\r\n          <Tags>\r\n            <Title>Percent Change 24h_24h hours:</Title>\r\n            <TagContent\r\n              isMinus={\r\n                data?.quotes.USD.volume_24h_change_24h\r\n                  .toString()\r\n                  .slice(0, 1) !== \"-\"\r\n              }\r\n            >{`$ ${data?.quotes.USD.volume_24h_change_24h}%`}</TagContent>\r\n          </Tags>\r\n          <Tags>\r\n            <Title>Percent Change 7 days:</Title>\r\n            <TagContent\r\n              isMinus={\r\n                data?.quotes.USD.percent_change_7d.toString().slice(0, 1) !==\r\n                \"-\"\r\n              }\r\n            >{`$ ${data?.quotes.USD.percent_change_7d}%`}</TagContent>\r\n          </Tags>\r\n          <Tags>\r\n            <Title>Percent Change year:</Title>\r\n            <TagContent\r\n              isMinus={data?.quotes.USD.percent_change_1y.toString() !== \"-\"}\r\n            >{`$ ${data?.quotes.USD.percent_change_1y}%`}</TagContent>\r\n          </Tags>\r\n          <Tags>\r\n            <Title>Percent Change ath_price :</Title>\r\n            <TagContent\r\n              isMinus={data?.quotes.USD.ath_price.toString() !== \"-\"}\r\n            >{`$ ${data?.quotes.USD.ath_price}%`}</TagContent>\r\n          </Tags>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","import {\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Chart from \"./Chart\";\r\nimport Price from \"./Price\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 0px auto;\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 15px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Home = styled.div`\r\n  text-align: center;\r\n  color: ${(props) => props.theme.bgColor};\r\n  background-color: ${(props) => props.theme.textColor};\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  &:hover {\r\n    color: ${(props) => props.theme.accentColor};\r\n    transition: color 0.2s ease-in-out;\r\n  }\r\n  a {\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface IInfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface IPriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<IInfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<IPriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId)\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Helmet>\r\n      <Header>\r\n        <Home>\r\n          <Link to=\"/\">Go Home</Link>\r\n        </Home>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Open Source:</span>\r\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/:coinId/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/:coinId/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\nexport default Coin;\r\n","import { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\n//createGlobalStyle을 이용하여 렌더링 작업시 해당 component는 전역 scope에 스타일 적용\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#808e9b\",\r\n  textColor: \"black\",\r\n  accentColor: \"#4cd137\",\r\n  minusColor: \"red\",\r\n  plusColor: \"blue\",\r\n  containerColor: \"#808e9b\",\r\n};\r\n"],"sourceRoot":""}